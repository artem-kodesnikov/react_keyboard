{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","isPressed","pressedKey","this","document","addEventListener","event","setState","key","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,WAAW,EACXC,WAAY,IAHhB,uDAME,WAAqB,IAAD,OAClBC,KAAKH,MAAMC,WAAY,EACvBG,SAASC,iBAAiB,SAAS,SAACC,GAClC,EAAKC,SAAS,CAAEL,WAAYI,EAAME,WATxC,kCAaE,WAAwB,IAAD,OACrBJ,SAASK,oBAAoB,SAAS,SAACH,GACrC,EAAKC,SAAS,CAAEL,WAAYI,EAAME,WAfxC,oBAmBE,WACE,MAAkCL,KAAKH,MAA/BE,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,UAEpB,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGT,EACG,0BADM,mCAEsBC,EAFtB,aAzBpB,GAAyBS,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.b065505f.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isPressed: true,\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    this.state.isPressed = false;\n    document.addEventListener('keyup', (event: KeyboardEvent) => {\n      this.setState({ pressedKey: event.key });\n    });\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', (event: KeyboardEvent) => {\n      this.setState({ pressedKey: event.key });\n    });\n  }\n\n  render() {\n    const { pressedKey, isPressed } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {isPressed\n            ? 'Nothing was pressed yet'\n            : `The last pressed key is [${pressedKey}]`}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}